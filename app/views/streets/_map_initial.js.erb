// Links for attribution
var osmLink  = '<a href="https://openstreetmap.org">OpenStreetMap</a>',
    osmCopy = '<a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>',
    mapboxCopy = '<a href="https://www.mapbox.com/map-feedback/">Mapbox</a>'
    esriLink = '<a href="https://www.esri.com/">Esri</a>',
    mbLink   = '<a href="https://mapbox.com/">OpenStreetMap</a>',
    rumseyLink = '<a href="http://www.davidrumsey.com">The David Rumsey Map Collection</a>',
    csunLink = ""
    bigBlogMapLink = 'http://www.bigmapblog.com'

// Map tile URLs
  var osmUrl    = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
    esriUrl   = 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServe\
r/tile/{z}/{y}/{x}',
    mbUrl = 'https://api.mapbox.com/styles/v1/mtnbiker/cj3gnezpq00152rt5o6g3kyqp/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoibXRuYmlrZXIiLCJhIjoiNmI5ZmZjMzAyNzJhY2Q0N2ZlN2E1ZTdkZjBiM2I1MTUifQ.6R3ptz9ejWpxcdZetLLRqg', 
    // Hill1928url = 'http://mapwarper.net/maps/tile/2935/{z}/{x}/{y}.png',
    Hill1928url = '//knobby.ws/crorestiles/1928Hills/{z}/{x}/{y}.png',
    baistDetailurl = '//knobby.ws/crorestiles/tiles/{z}/{x}/{y}.png', 
    baistKMurl = "//knobby.ws/crorestiles/bkm/{z}/{x}/{y}.png",
    street1902URL = "//knobby.ws/crorestiles/street1902/{z}/{x}/{y}.png",
    woods1908URL = "//knobby.ws/crorestiles/wood1908/{z}/{x}/{y}.png",
    sanborn1894km1aURL = "//knobby.ws/crorestiles/sanborn1894km1a/{z}/{x}/{y}.png",
    sanborn1888km1aURL = "//knobby.ws/crorestiles/sanborn1888km1a/{z}/{x}/{y}.png",
    googleUrl = 'http://www.google.cn/maps/vt?lyrs=s@189&gl=cn&x={x}&y={y}&z={z}'
    bingUrl = "baseMapUrl = new L.BingLayer('AtGe6-aWfp_sv8DMsQeQBgTVE0AaVI2WcT42hmv12YSO-PPROsm9_UvdRyL91jav, {type: 'Road'});"
    
// Attribution
    var osmAttrib = '&copy; ' + osmLink + ' Contributors',
    esriAttrib = 'i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP,\
 and the GIS User Community & '+ esriLink,
    mbAttrib = '&copy; ' + mapboxCopy + '&copy;' + osmCopy,
    mwAttrib ='https://thinkwhere.wordpress.com',
    woods1908Attrib = rumseyLink,
    baistAttrib = rumseyLink,
    csun1894Attrib = csunLink,
    csun1888Attrib = csunLink
    bigBlogMapAttrib = bigBlogMapLink
    
// Putting together 
  var mbMap       = L.tileLayer(mbUrl,        {attribution: mbAttrib}),
      osmMap      = L.tileLayer(osmUrl,       {attribution: osmAttrib}),
      esriMap     = L.tileLayer(esriUrl,      {attribution: esriAttrib}),
      bing     = L.tileLayer(bingUrl),
      google      = L.tileLayer(googleUrl,      {attribution: 'Google'}),
      // hillMap1928 = L.tileLayer(Hill1928url,  {attribution: mwAttrib}),
      hillMap1928 = L.tileLayer(Hill1928url,  {attribution: bigBlogMapAttrib}),
      baistDetail = L.tileLayer(baistDetailurl, {attribution: baistAttrib}),
      baistKM     = L.tileLayer(baistKMurl,   {attribution: baistAttrib}),
      street1902  = L.tileLayer(street1902URL),
      woods1908    = L.tileLayer(woods1908URL,  {attribution: woods1908Attrib}),
      sanborn1894km1a = L.tileLayer(sanborn1894km1aURL,  {attribution: csun1894Attrib}),
      sanborn1888km1a = L.tileLayer(sanborn1888km1aURL,  {attribution: csun1888Attrib})
      
    
    var baseLayers = {
      "<span style='color: orange'>OSM Street</span>"        : osmMap, // need so can switch back to
      "<span style='color: blue'>1921 Baist detail</span>"   : baistDetail,
      "<span style='color: blue'>1921 Baist Key Map</span>"  : baistKM,
      "<span style='color: green'>ESRI Satellite</span>"     : esriMap,
      "<span style='color: green'>Google Satellite</span>"   : google,
      "<span style='color: green'>Bing [broken link]</span>" : bing,
      "1928 Hill"  : hillMap1928,
      "1908 Woods"  : woods1908,
      "1908 LA [broken link]": mbMap,
      "1902 Rueger" : street1902,
      "1894 Sanborn" : sanborn1894km1a,
      "1888 Sanborn" : sanborn1888km1a,
    };
    
    // Sets up map, but if there is a segment defined will zoom to that in the next if statement
    var map = L.map('map').setView([34.05, -118.25], 13);
    
    // gon is a gem which allows reading of gon. variables defined in the controller
    console.log("typeof gon.streetExtentArray: " + typeof gon.streetExtentArray);
    var streetExtentArray = gon.streetExtentArray;
    console.log("typeof streetExtentArray: " + typeof streetExtentArray);
    
    // Contorsions to get the bounds if the streetExtentArray has data and coerce to the needed types
    // May not be correctly leveraging gon. I'M GETTING erb NOT gon.
    if ( streetExtentArray == null ) {
      console.log("streetExtentArray is null");
    } else {
        
      console.log(streetExtentArray.length);
      // L.polyline(streetExtentArray).addTo(map)
      //     .bindPopup("<%= @street.dateEarliest %><br><%= @street.currentName %><br><%= @street.dateLatest %>")
      //      // .openPopup("< = @street.extent_array.getCenter() %>") // need to parse to get coordinate getCenter works on latlng in Leaflet, but not on simple array
      // ;
      if (streetExtentArray == undefined) {
        console.log("streetExtentArray is undefined: " ) 
      } else {
        console.log("streetExtentArray not null and length gt 2: " + streetExtentArray );
        map.fitBounds(<%= @street.extent_array %>); // zooms to area of interest
        
        L.polyline(<%= @street.extent_array %>).addTo(map)
            .bindPopup("&le;<%= @street.dateEarliest %><br><%= @street.currentName %><br>&ge;<%= @street.dateLatest %>")
             // .openPopup("< = @street.extent_array.getCenter() %>") // need to parse to get coordinate getCenter works on latlng in Leaflet, but not on simple array
        ;
        
      }
    };

    // adds the default map layer. Does this layer remain on when selecting one the layers from below?. Seems as if the null below should take the place of this
    L.tileLayer(osmUrl).addTo(map);
    
    // Adds control to show other layers. Can't figure out how to get the options collapsed: false
    L.control.layers( baseLayers, null, {collapsed:false} ).addTo(map);