<div id="map">
<!--  <script src="https://cdn.polyfill.io/v2/polyfill.min.js?features=Promise"></script>  Needed for Bing map for OLDER browsers. -->
<script>
<%= render 'map_initial.js' %>
  
  // Initial map draws the map and adds control to select basemaps.
  // Now we add what's needed to draw the extent and save to database

    // Initialise the FeatureGroup to store editable layers
    var drawnItems = new L.FeatureGroup();
    map.addLayer(drawnItems);
    
    // From https://stackoverflow.com/questions/31625126/editable-geojson-layer-on-map-with-leaflet-draw as a test
    // Doesn't change if make it extent_array, even if array present
    // Hoping will lead to a way to write to streets.extent
    // I THINK THIS IS ALREADY IN map_initial
    // L.geoJson(<%= RGeo::GeoJSON.encode(@street.extent).to_json.html_safe %>, {
    //               onEachFeature: function (feature, layer) {
    //                   drawnItems.addLayer(layer);
    //               }
    //           }).addTo(map);
              
              // OR look 
              // geojson = $.parseJSON(data);
              //         L.geoJson(geojson).addTo(map);
              //       },
    
    // Initialise the draw control for only polyline and pass it the FeatureGroup of editable layers
    var drawControl = new L.Control.Draw({
      position: 'topleft',
      draw: {
        polyline :  true,
        marker:     false,
        polygon :   false,
        rectangle : false,
        circle :    false
      },
      edit: {
        featureGroup: drawnItems
      }
    });
    map.addControl(drawControl);

// What is  the pop up?
    map.on('draw:created', function(e) {
      var type = e.layerType,
        layer = e.layer;
      // if (type === 'marker') {
      //   layer.bindPopup('A popup!');
      // }

      // from https://gis.stackexchange.com/questions/133379/how-to-export-to-all-points-within-leaflet-polygon
      var points = layer._latlngs; // No longer needed, but shows alt way to get lat lng, need to check type
      console.log("type of layer._latlngs: " + typeof layer._latlngs); //object, what about string?
      console.log("type of points = to above: " + typeof points); //object
      // here you can get it in geojson format
      var geojson = layer.toGeoJSON();  // is an object Object
      console.log("type of layer.toJSON: " + typeof geojson); // object
      var latlngs = layer.getLatLngs(); // LatLng(34.04953, -118.29912),LatLng(34 etc. 
      console.log("type of layer.getLatLngs(): " + typeof layer.getLatLngs() + ". But it displays as a partial JSON ()");
      console.log(latlngs);
  // export the coordinates from the layer
      coordinates = [];
      latlngs = layer.getLatLngs();
      for (var i = 0; i < latlngs.length; i++) {
          coordinates.push("[" + [latlngs[i].lat, latlngs[i].lng] + "]")
      }
      console.log("coordinates: " + coordinates);
      // push the coordinates to the json geometry
      // geojson['geometry']['coordinates'] = [coordinates];
      //
      // // Finally, show the poly as a geojson object in the console
      // console.log(JSON.stringify(geojson));
      $("#street_extent_array").val("[" + coordinates + "]"); // writes coordinate array into field on form ready for save
       // here you add it to a layer to display it in the map
      drawnItems.addLayer(layer);
    // var collection = drawnItems.toGeoJSON();
    // console.log(collection);
    // $("#street_ref2").next().text("Testing writing to DOM in window.onload")  ; // This works writing to span. Removed span after test
    // $("#street_ref2").value = "Testing writing to DOM in window.onload"; // Writing to the field. Doesn't work when the above does
    // $("#street_extent_array").val("Testing writing to DOM at completion of drawing");
    // $("#street_ref2").val("[" + coordinates + "]"); // val is the key
    // $("street_extent_array").value = drawnItems.toGeoJSON(); // Didn't work here, but DOM may be wrong
      // var extent_array_new = drawnItems.toGeoJSON(); // No error, but how parse?
      // console.log(extent_array_new);
      // $("#street_ref2").val(extent_array_new);
    }); // end of map.on

    

    // var extent = drawnItems.LatLngs(); // not a function
    
    // map.on('draw:drawstop'; function (e) {
   //           var layers = e.layers;
   //           layers.eachLayer(function (layer) {
   //               //do whatever you want; most likely save back to db
   //
   //           });
   //       });
  
    //  var street_ref2_Was = $("#street_ref2").value;
    // console.log(street_ref2_Was);
  // Not doing anything as is
    

    
 </script>
       
</div>